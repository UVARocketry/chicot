.{
    .name = .chicot,
    .version = "0.0.0",
    .fingerprint = 0x2f52ef66cad5ba4f,
    .minimum_zig_version = "0.15.1",
    .dependencies = .{},
    .paths = .{
        "build.zig",
        "build.zig.zon",
        "helpers",
        "src",
        "platformio_clangd",
    },
    // we should prolly have a rocketry build version that we can parse to determine
    // if we are out of date or something
    .rocketrybuildversion = "0.0.0",
    .builddefaults = .{
        .mode = "desktop",
        .targets = .{
            .teensy = .{
                .arch_os_abi = "thumb-freestanding-eabihf",
                .cpu_features = "cortex_m7",
            },
        },
    },
    .buildmodes = .{
        // shared stuff between everyone
        .shared = .{
            .description = "Common parameters shared between all build modes",
            .cpp = .{
                .otherFlags = .{
                    "-std=c++23",
                },
                .define = .{
                    .FLOAT = "float",
                },
            },
            .dependencies = .{
                // .{
                //     .importName = "dep",
                //     .dependencyName = "dep",
                // },
            },
            .inherit = null,
            .outputTypes = .{},
        },
        .desktopshared = .{
            .inherit = "shared",
            .description = "Common parameters for desktop build modes",
            .cpp = .{
                .otherFlags = .{
                    // need to have these on not-platformio bc otherwise it throws
                    // a billion errors from the arduino libraries.
                    // it's good to have these on desktop bc it forces you to
                    // write better code
                    "-Wall",
                    "-Wextra",
                    "-Wpedantic",
                    "-Wno-gnu-anonymous-struct",
                    "-Wno-nested-anon-types",
                },
                .define = .{},
            },
        },
        .platformioshared = .{
            .inherit = "shared",
            .description = "Shared info for platformio stuff",
            .outputTypes = .{
                .libzig,
            },
            .target = "teensy",
            .platformio = .{
                .platform = "teensy",
                .board = "teensy41",
                .framework = "arduino",
                // This should ADD to default extra_scripts.
                // Default extra_scripts should include a default python script that:
                // - builds the libzig to link in
                // - and probably diffs the current platformio with the one zig expects,
                // and tells the user to regen platformio.ini if not matching
                .extra_scripts = .{
                    "pre:idk.py",
                },
                // This should ADD to default lib_deps
                .lib_deps = .{
                    "Wire",
                    "SPI",
                    "sandeepmistry/LoRa@^0.8.0",
                    "sparkfun/SparkFun BMP581 Arduino Library@^1.0.2",
                    "paulstoffregen/SerialFlash",
                    "adafruit/Adafruit BusIO@^1.16.2",
                    "adafruit/Adafruit Unified Sensor@^1.1.14",
                    "adafruit/Adafruit LSM6DS@^4.7.4",
                },
                // lib_deps and extra_scripts should be given defaults from zig
            },
        },
        .header = .{
            .description = "build stuff for header only libraries",
        },
        .teensy41 = .{
            .inherit = "platformioshared",
            .description = "build stuff for platformio libs",
        },
        .groundstation = .{
            .inherit = "platformioshared",
            .description = "build stuff for platformio groundstation",
            .target = "teensy",
        },
        // this mode should build zig and all C++ files that ARENT for exe OR python
        // this can then be linked into an actual application building for python or exe
        //
        // building header only libs should also prolly be here
        .lib = .{
            .inherit = "desktopshared",
            .description = "building the C++ and zig files that arent necessary for exe or python",
            .outputTypes = .{
                .liball,
            },
        },
        .desktop = .{
            .inherit = "desktopshared",
            .description = "Building a testable desktop executable",
            .outputTypes = .{
                .exe,
                .pythonmodule,
            },
        },
        .python = .{
            .inherit = "desktopshared",
            .outputTypes = .{
                .pythonmodule,
            },
            .description = "Building a python module that can be imported into python programs",
        },
    },
}
